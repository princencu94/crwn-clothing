{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MRKT\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-in.styles.scss';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          password: '',\n          email: ''\n        });\n      } catch (error) {\n        console.log('Something went Wrong', error.message);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"l already have an Account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign in with Email and Password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      name: \"email\",\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      name: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Sign in With Google \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart)\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","message","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport './sign-in.styles.scss';\r\nimport { auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n       \r\n        const {email,password} = this.state;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({password:'', email:''});\r\n        } catch (error) {\r\n            console.log('Something went Wrong', error.message);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render() {\r\n        const {googleSignInStart} = this.props\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>l already have an Account</h2>\r\n                <span>Sign in with Email and Password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput type='email' value={this.state.email} handleChange={this.handleChange} name='email' label=\"email\" required/>\r\n                   \r\n\r\n                    <FormInput type='password' value={this.state.password} handleChange={this.handleChange} label=\"password\" name='password' required/>\r\n                   \r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign In </CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn >Sign in With Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    googleSignInStart: () => dispatch(googleSignInStart)\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}