{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { googleProvider, createUserProfileDocument, auth } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    password,\n    email\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(password, email);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignIn() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn)]);\n}","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","googleProvider","createUserProfileDocument","auth","SignInSuccess","SignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","signInWithEmail","payload","password","email","signInWithEmailAndPassword","onGoogleSignIn","GOOGLE_SIGN_IN_START","onEmailSignIn","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,cAAT,EAAyBC,yBAAzB,EAAoDC,IAApD,QAAgE,+BAAhE;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBP,cAArB,CAArB;AACA,UAAMQ,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAT,CAA1B,EAAuD;AAE1D,MAAI;AACA,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,QAAhC,EAA0CC,KAA1C,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAID,OAAO,UAAUM,cAAV,GAA2B;AAC9B,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUgB,aAAV,GAA0B;AAC7B,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM1B,GAAG,CACL,CAACC,IAAI,CAACqB,cAAD,CAAL,EAAuBrB,IAAI,CAACuB,aAAD,CAA3B,CADK,CAAT;AAGH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport userActionTypes from './user.types';\r\nimport { googleProvider, createUserProfileDocument, auth } from '../../firebase/firebase.utils';\r\nimport {SignInSuccess,SignInFailure} from './user.actions';\r\n\r\nexport function* signInWithGoogle() {\r\n    \r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put(SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()}));\r\n      \r\n    } catch (error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{password, email}}) {\r\n    \r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(password, email);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put(SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()}));\r\n      \r\n    } catch (error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* onGoogleSignIn() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignIn() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all(\r\n        [call(onGoogleSignIn), call(onEmailSignIn)]\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}