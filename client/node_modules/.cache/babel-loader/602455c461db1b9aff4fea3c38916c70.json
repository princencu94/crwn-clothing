{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MRKT\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport { signInWithGoogleStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  render() {\n    const {\n      signInWithGoogleStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"l already have an Account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Sign in with Email and Password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      name: \"email\",\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      name: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: signInWithGoogleStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Sign in With Google \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogleStart: () => dispatch(signInWithGoogleStart)\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","connect","signInWithGoogleStart","SignIn","Component","render","props","handleSubmit","state","email","handleChange","password","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,uBAAP;AACA,SAAQC,qBAAR,QAAoC,+BAApC;;AAGA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAIjCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACH,MAAAA;AAAD,QAA0B,KAAKI,KAArC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAA1C;AAAiD,MAAA,YAAY,EAAE,KAAKC,YAApE;AAAkF,MAAA,IAAI,EAAC,OAAvF;AAA+F,MAAA,KAAK,EAAC,OAArG;AAA6G,MAAA,QAAQ,MAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,QAA7C;AAAuD,MAAA,YAAY,EAAE,KAAKD,YAA1E;AAAwF,MAAA,KAAK,EAAC,UAA9F;AAAyG,MAAA,IAAI,EAAC,UAA9G;AAAyH,MAAA,QAAQ,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAMI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAER,qBAArC;AAA4D,MAAA,cAAc,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CANJ,CAJJ,CADJ;AAkBH;;AAxBgC;;AA2BrC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAI;AACnCX,EAAAA,qBAAqB,EAAG,MAAMW,QAAQ,CAACX,qBAAD;AADH,CAAJ,CAAnC;;AAGA,eAAeD,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCT,MAAlC,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.styles.scss';\r\nimport {signInWithGoogleStart} from '../../redux/user/user.actions';\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    \r\n   \r\n\r\n    render() {\r\n        const {signInWithGoogleStart} = this.props;\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>l already have an Account</h2>\r\n                <span>Sign in with Email and Password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput type='email' value={this.state.email} handleChange={this.handleChange} name='email' label=\"email\" required/>\r\n                   \r\n\r\n                    <FormInput type='password' value={this.state.password} handleChange={this.handleChange} label=\"password\" name='password' required/>\r\n                   \r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign In </CustomButton>\r\n                        <CustomButton type='button' onClick={signInWithGoogleStart} isGoogleSignIn >Sign in With Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signInWithGoogleStart : () => dispatch(signInWithGoogleStart)\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}