{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MRKT\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","WithSpinner","CollectionOverview","CollectionPage","createStructuredSelector","connect","Route","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AAEA,MAAMC,6BAA6B,GAAGR,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMQ,yBAAyB,GAAGT,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACN,MAAAA;AAAD,QAA+B,KAAKO,KAA1C;AACAP,IAAAA,0BAA0B;AAC7B;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGJ,KAAK,IAAI,oBAAC,6BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEJ,KAAK,IAAK,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhBkC;;AAmBvC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAET;AADuB,CAAD,CAAhD;;AAGA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\nimport {Route} from 'react-router-dom';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        const {fetchCollectionsStartAsync} = this.props\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {match, isCollectionFetching} = this.props;\r\n        return(\r\n            <div>\r\n                <Route exact path={`${match.path}`} render={(props => <CollectionOverviewWithSpinner  isLoading={isCollectionFetching} {...props} />)} />\r\n                <Route path={`${match.path}/:collectionId`} render={props => (<CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />)} />\r\n            </div>\r\n        )\r\n    }        \r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}