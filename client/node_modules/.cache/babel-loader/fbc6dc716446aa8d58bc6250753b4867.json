{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MRKT\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"l don't have an Account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign Up with your Email and Password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButton","FormInput","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\n\r\n\r\nconst SignUp = ( { signUpStart } ) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n       \r\n        \r\n    \r\n        if (password !== confirmPassword) {\r\n          alert(\"passwords don't match\");\r\n          return;\r\n        }\r\n    \r\n        signUpStart({ displayName, email, password });\r\n      };\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>l don't have an Account</h2>\r\n                <span>Sign Up with your Email and Password</span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label ='Name'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n  });\r\n  \r\n  export default connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(SignUp);"]},"metadata":{},"sourceType":"module"}