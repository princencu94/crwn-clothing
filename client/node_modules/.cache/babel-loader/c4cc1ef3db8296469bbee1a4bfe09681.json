{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/MRKT/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAErC,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,UAAU,CAACG,eAAe,CAACc,uBAAjB,EAA0CT,qBAA1C,CAAhB;AACH","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    \r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}"]},"metadata":{},"sourceType":"module"}